function [Pos, Ang, TimStam, Quality, Error] = tracker_stream_save(OptDispl)
% The tracker_stream_save: designed to place the tracker in a 
% stream mode. 
% input: OptDispl
%        (OptDispl = 1) => sensor position is displayed on the MATLAB
%        command window
%        (OptDispl = 0) => sensor position is not displayed
% output: Pos: Attached sensors positions
%         Ang: Attached sensors angles
%         TimStam : timestamp
%         Error: Error code
% Ascension Technology Corporation 

global SensorNumAttached;
global hMainfig;
global gui;

clf;

TRUE=1;FALSE=0;
ON=1;OFF=0;

gui.start_proc = 0;
gui.stop_proc  = 0;

if length(findobj(gcf,'Label','Run tracker'))==1
    hMainfig('Run tracker', 'off');
end
hfig = figure('Position',[408 327 360 244],...
    'MenuBar','none', ...
    'Name','Procedure Menu',...
    'NumberTitle','off');
% Start button
hpush_start = uicontrol(hfig,'Style','pushbutton');
set(hpush_start,'Position',[20 200 150 20]); %[left bottom width height]
set(hpush_start,'String','Start Saving STREAM I/O of tracker');
set(hpush_start,'Callback','gui.start_proc=1;');

% Stop button
hpush_stop = uicontrol(hfig,'Style','pushbutton');
set(hpush_stop,'Position',[20 150 150 20]); %[left bottom width height]
set(hpush_stop,'String','Stop Saving STREAM I/O of tracker');
set(hpush_stop,'Callback','gui.stop_proc=1;');
set(hpush_stop,'Enable','off');


while (gui.start_proc == 0)
    drawnow
    %    disp('waiting to start')
end
set(hpush_start,'Enable','off');
set(hpush_stop,'Enable','on');

% Get synchronous Record
% Get synchronous Record
sm.x0 = 0;   sm.y0 = 0;   sm.z0 = 0; sm.a0 = 0;   sm.e0 = 0;  sm.r0 = 0;
sm.time0 = 0;  sm.quality0 = 0;
sm.x1 = 0;   sm.y1 = 0;   sm.z1 = 0; sm.a1 = 0;   sm.e1 = 0;  sm.r1 = 0;
sm.time1 = 0;  sm.quality1 = 0;
sm.x2 = 0;   sm.y2 = 0;   sm.z2 = 0; sm.a2 = 0;   sm.e2 = 0;  sm.r2 = 0;
sm.time2 = 0;  sm.quality2 = 0;
sm.x3 = 0;   sm.y3 = 0;   sm.z3 = 0; sm.a3 = 0;   sm.e3 = 0;  sm.r3 = 0;
sm.time3 = 0;  sm.quality3 = 0;

Record  = libstruct('tagDOUBLE_POSITION_ANGLES_TIME_Q_RECORD_AllSensors', sm);  
pRecord = libpointer('tagDOUBLE_POSITION_ANGLES_TIME_Q_RECORD_AllSensors', Record);

Counter   = 0;
senSorPre = [1 1 1 1];
NumSenPres = sum(SensorNumAttached);


while (gui.stop_proc == 0 )
    clc
        % Get synchronous Record
        Error   = calllib('ATC3DG', 'GetSynchronousRecord',  hex2dec('ffff'), Record, 4*64);
        errorHandler(Error);
    for count = 1:4
        Counter = Counter + 1;
    
        if(count == 1)
            Pos(Counter, 1, count)   = Record.x0;
            Pos(Counter, 2, count)   = Record.y0;
            Pos(Counter, 3, count)   = Record.z0;
            Ang(Counter, 1, count)   = Record.a0;
            Ang(Counter, 2, count)   = Record.e0;
            Ang(Counter, 3, count)   = Record.r0; 
            time(Counter, 1, count)   = Record.time0; 
            Quality(Counter, 1, count)   = Record.quality0; 
        end
        if(count == 2)
            Pos(Counter, 1, count)   = Record2.x;
            Pos(Counter, 2, count)   = Record2.y;
            Pos(Counter, 3, count)   = Record2.z;
            Ang(Counter, 1, count)   = Record2.a;
            Ang(Counter, 2, count)   = Record2.e;
            Ang(Counter, 3, count)   = Record2.r;   
            Quality(Counter, 1, count)   = Record2.quality; 
        end
        if(count == 3)
            Pos(Counter, 1, count)   = Record3.x;
            Pos(Counter, 2, count)   = Record3.y;
            Pos(Counter, 3, count)   = Record3.z;
            Ang(Counter, 1, count)   = Record3.a;
            Ang(Counter, 2, count)   = Record3.e;
            Ang(Counter, 3, count)   = Record3.r;   
            Quality(Counter, 1, count)   = Record3.quality; 
        end
        if(count == 4)
            Pos(Counter, 1, count)   = Record4.x;
            Pos(Counter, 2, count)   = Record4.y;
            Pos(Counter, 3, count)   = Record4.z;
            Ang(Counter, 1, count)   = Record4.a;
            Ang(Counter, 2, count)   = Record4.e;
            Ang(Counter, 3, count)   = Record4.r;   
            Quality(Counter, 1, count)   = Record4.quality; 
        end



        if (OptDispl==1)
            display(sprintf('\nSensor number %g position in inches: ',...
                    count))
            disp([Pos(Counter, 1, count) Pos(Counter, 2, count)...
                  Pos(Counter, 3, count)])
        end
        drawnow  % forces Matlab to evaluate Callback in figure
    end
    TimStam(Counter/4)  = Record1.time;
end
indsenSorPre =  find(SensorNumAttached == 1);


set(hpush_stop,'Enable','off'); % show that button has been pressed
close(hfig)
clear hfig;

% Force the tracker system to come out of STREAM mode by Issuing the 
% command GetSensorStatus
for count = 1:4
    if SensorNumAttached(count)
        Error1 = calllib('ATC3DG', 'GetSensorStatus', count - 1);
        errorHandler(Error1);
    end
end

drawnow;




